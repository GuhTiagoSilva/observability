server.port=8081
spring.application.name=kafka-consumer-demo

# All traces should be sent to latency analysis tool, for production use < 1.0 (100%) [default=0.1]
management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=prometheus, metrics, health, info

# For Exemplars to work we need histogram buckets
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles-histogram.method.observed=true

# The step size to use in computing windowed statistics like max. The default is 1 minute.
# To get the most out of these statistics, align the step interval to be close to your scrape interval.
management.prometheus.metrics.export.step=10s

# Commons tags are applied to all meters
management.observations.key-values.some.tag=some.value

# IMPORTANT! for apps running version lower than Spring 3.2
# traceID and spanId are predefined MDC keys - we want the logs to include them as part of log level
# logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

#exmaple of log level configuration by Class
logging.level.com.example.messaging.controller.FactController=INFO

# Database configuration
spring.datasource.url=jdbc:mysql://localhost:3307/fact-db
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.flyway.locations=classpath:db/migration
